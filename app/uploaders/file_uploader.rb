class FileUploader < Shrine
  plugin :derivatives

  # The Cloudfront URL generated by the serverless image handler
  SERVERLESS_IMAGE_HOST = Rails.application.credentials.image_handler_host
  DEFAULT_EDITS = {
    rotate: 'auto',
    quality: 60,
    progressive: true,
    chromaSubsampling: '4:4:4',
    withoutEnlargement: true,
    sharpen: true
  }

  Attacher.derivatives do |original|
    def serverless_image_request(original, edits = {})
      request_path = Base64.strict_encode64({
        bucket: Shrine.storages[:cache].bucket.name,
        key: [Shrine.storages[:cache].prefix, record.attachment.id].reject(&:blank?).join('/'), # The aws object key of the original image in the `store` S3 bucket
        edits: edits
      }.to_json).chomp
      "#{SERVERLESS_IMAGE_HOST}/#{request_path}"
    end

    # TODO: dynamic options based on file type, e.g. gif may behave differently,
    #       and these options should be skipped for non-image files.
    # TODO: images returned by Shrine.remote_url have file extension set as .jpeg, not .jpg, which is annoying
    # TODO: set up URL fallbacks for backgrounded derivatives? https://shrinerb.com/docs/processing#url-fallbacks

    {
      thumb: Shrine.remote_url( serverless_image_request(original, {
        resize: {
          width: 200,
          height: 200,
          fit: 'cover'
        }.reverse_merge(DEFAULT_EDITS)
      })),
      small: Shrine.remote_url( serverless_image_request(original, {
        resize: {
          width: 600,
          height: 600,
          fit: 'inside'
        }.reverse_merge(DEFAULT_EDITS)
      })),
      medium: Shrine.remote_url( serverless_image_request(original, {
        resize: {
          width: 1200,
          height: 1200,
          fit: 'inside'
        }.reverse_merge(DEFAULT_EDITS)
      })),
      large: Shrine.remote_url( serverless_image_request(original, {
        resize: {
          width: 2200,
          height: 2200,
          fit: 'inside'
        }.reverse_merge(DEFAULT_EDITS)
      }))
    }
  end
end
