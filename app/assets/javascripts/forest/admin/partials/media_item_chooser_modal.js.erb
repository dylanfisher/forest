App.MediaItemChooser = {
  instances: [],
  initialize: function($elements) {
    var that = this;

    $(document).one('turbolinks:before-cache.mediaItemChooser', function() {
      that.teardown();
    });

    $elements.each(function() {
      var $element = $(this);

      that.instances.push( $element );

      $element
        .on('show.bs.modal', function(e) {
          var $modalBody = $element.find('.modal-body');

          if ( $modalBody.find('.media-library').length ) {
            App.InfiniteLoader.initialize( $element.find('[data-infinite-load]'), { $scrollListener: $element } );
          } else {
            $.ajax('<%= Rails.application.routes.url_helpers.media_items_path %>')
              .done(function(data) {
                $modalBody.html( $(data).find('.media-library') );
                App.InfiniteLoader.initialize( $element.find('[data-infinite-load]'), { $scrollListener: $element } );
              }).fail(function() {
                var error = 'Unable to fetch media items index.';
                console.warn(error);
                $modalBody.html(error);
              });
          }
        })
        .on('shown.bs.modal', function() {
          $(document).trigger('app:show-media-item-chooser');
        })
        .on('hide.bs.modal', function() {
          that.destroyModal();
        })
        .on('hidden.bs.modal', function() {
          // var $modalBody = $element.find('.modal-body');
        });
    });
  },
  destroyModal: function() {
    for ( var i = this.instances.length - 1; i >= 0; i-- ) {
      App.InfiniteLoader.unbindScroll( this.instances[i] );
    }
    $('.media-item-chooser__button--active').removeClass('media-item-chooser__button--active');
  },
  teardown: function() {
    this.destroyModal();
    for ( var i = this.instances.length - 1; i >= 0; i-- ) {
      this.instances[i].removeClass('fade').modal('hide');
    }
    this.instances = [];
    $('.media-item-chooser__button--active').removeClass('media-item-chooser__button--active');
  }
};

App.pageLoad.push(function() {
  App.MediaItemChooser.initialize( $('.media-item-chooser') );
});

$(document).on('click', '[data-media-item-input]', function() {
  App.MediaItemChooser.inputSelector = $(this).attr('data-media-item-input');
  App.MediaItemChooser.toPath = $(this).hasClass('media-item-chooser-to-path');
});

$(document).on('click', '.media-item-chooser .media-library-link', function(e) {
  e.preventDefault();

  var $wrapper = $('.media-item-chooser__button--active').closest('.image');
  var id = $(this).attr('data-media-item-id');
  var imageUrl = $(this).attr('data-image-url');
  var value = App.MediaItemChooser.toPath ? imageUrl : id;
  var $removeButton = $(this).closest('.image').find('.media-item-chooser__remove-image');

  if ( App.MediaItemChooser.inputSelector ) {
    var $input = $wrapper.find( App.MediaItemChooser.inputSelector );
    var $preview = $wrapper.find(App.MediaItemChooser.inputSelector + '_preview');

    $input.val( value );

    if ( $preview.length )  {
      $preview.removeClass('hidden').attr('src', imageUrl);
      $removeButton.removeClass('hidden');
    }
    $(this).closest('.modal').modal('hide');
  }
});

$(document).on('click.mediaItemChooser', '.media-item-chooser__button, [data-media-item-input]', function() {
  $(this).addClass('media-item-chooser__button--active');
});

$(document).on('click', '.media-item-chooser__remove-image', function() {
  var $wrapper = $(this).closest('.image');
  var $image = $wrapper.find('.media-item-chooser__image');
  var $button = $wrapper.find('.media-item-chooser__button');
  var $input = $( $button.attr('data-media-item-input') );

  $image.attr('src', '').attr('alt', '').addClass('hidden');
  $input.val('');
  $(this).addClass('hidden');
});
